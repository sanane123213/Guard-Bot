const Discord = require("discord.js");
const client = new Discord.Client();
const fs = require("fs");
const ayarlar = require("./ayarlar.json");
const chalk = require("chalk");
require("./util/eventLoader")(client);
const db = require("quick.db");

const log = message => {
  console.log(`${message}`);
};

client.commands = new Discord.Collection();
client.aliases = new Discord.Collection();
fs.readdir("./komutlar/", (err, files) => {
  if (err) console.error(err);
  log(`${files.length} komut yüklenecek.`);
  files.forEach(f => {
    let props = require(`./komutlar/${f}`);
    log(`Komut - ${props.help.name}.`);
    client.commands.set(props.help.name, props);
    props.conf.aliases.forEach(alias => {
      client.aliases.set(alias, props.help.name);
    });
  });
});

client.reload = command => {
  return new Promise((resolve, reject) => {
    try {
      delete require.cache[require.resolve(`./komutlar/${command}`)];
      let cmd = require(`./komutlar/${command}`);
      client.commands.delete(command);
      client.aliases.forEach((cmd, alias) => {
        if (cmd === command) client.aliases.delete(alias);
      });
      client.commands.set(command, cmd);
      cmd.conf.aliases.forEach(alias => {
        client.aliases.set(alias, cmd.help.name);
      });
      resolve();
    } catch (e) {
      reject(e);
    }
  });
};

client.load = command => {
  return new Promise((resolve, reject) => {
    try {
      let cmd = require(`./komutlar/${command}`);
      client.commands.set(command, cmd);
      cmd.conf.aliases.forEach(alias => {
        client.aliases.set(alias, cmd.help.name);
      });
      resolve();
    } catch (e) {
      reject(e);
    }
  });
};

client.unload = command => {
  return new Promise((resolve, reject) => {
    try {
      delete require.cache[require.resolve(`./komutlar/${command}`)];
      let cmd = require(`./komutlar/${command}`);
      client.commands.delete(command);
      client.aliases.forEach((cmd, alias) => {
        if (cmd === command) client.aliases.delete(alias);
      });
      resolve();
    } catch (e) {
      reject(e);
    }
  });
};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const DBL = require("dblapi.js");
const dbl = new DBL('eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjcwOTc5OTAwOTg5MTUxNjQ2NyIsImJvdCI6dHJ1ZSwiaWF0IjoxNTkwODQxODgzfQ.ZaR3KqLXD_b8Y5MUq1orRSnniIoXEV5oX09FhhAQTXE', client);
/*client.on('ready', async() => {
    setInterval(() => {
client.shard.fetchClientValues('guilds.size').then(results => {
        dbl.postStats(results.reduce((prev, val) => prev + val, 0));
})
    }, 900000);
});*/

      TDBotsAPI = require('tdbapi.js'),
      TDBots    = new TDBotsAPI('CfAoceBcbpEDTAvshDDMqSvLkOGPTF', client);

// Events
client.on('ready', async() => {
  setInterval(() => {
client.shard.fetchClientValues('guilds.size').then(results => {
    TDBots.post(results.reduce((prev, val) => prev + val, 0), client.shard.count)
})
  }, 900000);
})


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
client.on("message", async message => {
  if(message.channel.type != "text") return;
  let kontrol = (await db.fetch(`ayarlar.${message.guild.id}.dil`)) || "en_US";
  if(message.content == `<@!${client.user.id}>`){
    if(message.channel.type !== "text"){
    const embed = new Discord.RichEmbed()
    .setColor("#7289DA")
    .setDescription(`Hello my friend! My prefix is: "."\nIf you need a help: https://discord.gg/EvJ2x4xexv`)
    .setFooter("Astral Guard Bot! | Always Service!", client.user.avatarURL)
    message.channel.send(embed)
    return;
    } else if(kontrol == "en_US"){
    const embed = new Discord.RichEmbed()
    .setColor("#7289DA")
    .setDescription(`Hello my friend! My prefix is: "."\nIf you need a help: https://discord.gg/EvJ2x4xexv`)
    .setFooter("Astral Guard Bot! | Always Service!", client.user.avatarURL)
    message.channel.send(embed)
    return;
    } else if(kontrol == "tr_TR"){
    const embed = new Discord.RichEmbed()
    .setColor("#7289DA")
    .setDescription(`Merhaba arkadaşım! Benim ön-ek'im: "."\nEğer yardıma ihtiyacın varsa: https://discord.gg/EvJ2x4xexv`)
    .setFooter("Astral Guard Bot! | Daima Hizmet!", client.user.avatarURL)
    message.channel.send(embed)
    return;
    } else return;
  }
});
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

client.on("roleDelete", async role => {
  let kontrol = (await db.fetch(`ayarlar.${role.guild.id}.dil`)) || "en_US";
  if (kontrol !== "tr_TR") return;
  const log = await db.fetch(`ayarlar.${role.guild.id}.rolklog`);
  let limit = await db.fetch(`ayarlar.${role.guild.id}.rolklim`);
  let istisna = await db.fetch(`ayarlar.${role.guild.id}.rolkistisna`);
  let aktif = (await db.fetch(`ayarlar.${role.guild.id}.aktif`)) || "Kapalı";
  if (aktif == "Kapalı") return;
  const entry = await role.guild
    .fetchAuditLogs({ type: "ROLE_DELETE" })
    .then(audit => audit.entries.first());
  if (entry.executor.id == client.user.id) return;
  if (entry.executor.id == role.guild.owner.id) return;
  let yetkilimi;
  if (!istisna) yetkilimi = "Hayır";
  else {
    istisna.forEach(x => {
      if (role.guild.members.get(entry.executor.id).roles.has(x))
        return (yetkilimi = "Evet");
    });
  }
  if (yetkilimi != "Evet") {
    role.guild
      .createRole({
        name: role.name,
        color: role.color,
        hoist: role.hoist,
        permissions: role.permissions,
        mentionable: role.mentionable,
        position: role.position
      })
      .then(r => r.setPosition(role.position));
    if (!log) return;
    const embed = new Discord.RichEmbed()
      .setTitle(`${ayarlar.botadı}! | Rolkoruma Sistemi`)
      .setColor("#7289DA")
      .addField(`Silen`, entry.executor.tag + `(` + entry.executor.id + `)`)
      .addField(`Silinen Rol`, role.name + `(` + role.id + `)`)
      .addField(`Sonuç`, `Rol geri açıldı!`)
      .setFooter(ayarlar.botadı + "! | Daima Hizmet!");
    client.channels.get(log).send(embed);
  } else {
    if (!limit) {
      role.guild
        .createRole({
          name: role.name,
          color: role.color,
          hoist: role.hoist,
          permissions: role.permissions,
          mentionable: role.mentionable,
          position: role.position
        })
        .then(r => r.setPosition(role.position));
      if (!log) return;
      const embed = new Discord.RichEmbed()
        .setTitle(`${ayarlar.botadı}! | Rolkoruma Sistemi`)
        .setColor("#7289DA")
        .addField(`Silen`, entry.executor.tag + `(` + entry.executor.id + `)`)
        .addField(`Silinen Rol`, role.name + `(` + role.id + `)`)
        .addField(`Sonuç`, `Rol geri açıldı!`)
        .setFooter(ayarlar.botadı + "! | Daima Hizmet!");
      client.channels.get(log).send(embed);
      return;
    }
    let userlimit =
      (await db.fetch(`ayarlar.${entry.executor.id}.rolkuserlims`)) | 0;
    let u2 = userlimit + 1;
    if (u2 >= limit) {
      role.guild.roles.forEach(x => {
        if (role.guild.members.get(entry.executor.id).roles.has(x.id))
          return role.guild.members.get(entry.executor.id).removeRole(x.id);
        else return;
      });
      db.delete(`ayarlar.${entry.executor.id}.rolkuserlims`);
      role.guild.owner.send(
        `<@!${entry.executor.id}>, ${role.guild.name} adlı sunucuda rol silme limitini aştığı için tüm rolleri alındı! (Eğer alınmadıysa düzgün çalışmam için bot rolünü en üste taşıyın ve yönetici yetkisi verin.)`
      );
      if (!log) return;
      const embed = new Discord.RichEmbed()
        .setTitle(`${ayarlar.botadı}! | Rolkoruma Sistemi`)
        .setColor("#7289DA")
        .addField(`Silen`, entry.executor.tag + `(` + entry.executor.id + `)`)
        .addField(`Silinen Rol`, role.name + `(` + role.id + `)`)
        .addField(`Limit`, limit + `/` + limit)
        .addField(`Sonuç`, `Rol geri açıldı! Rolü silenin tüm rolleri alındı!`)
        .setFooter(ayarlar.botadı + "! | Daima Hizmet!");
      client.channels.get(log).send(embed);
    } else {
      db.add(`ayarlar.${entry.executor.id}.rolkuserlims`, 1);
      if (!log) return;
      const embed = new Discord.RichEmbed()
        .setTitle(`${ayarlar.botadı}! | Rolkoruma Sistemi`)
        .setColor("#7289DA")
        .addField(`Silen`, entry.executor.tag + `(` + entry.executor.id + `)`)
        .addField(`Silinen Rol`, role.name + `(` + role.id + `)`)
        .addField(`Limit`, u2 + `/` + limit)
        .addField(
          `Sonuç`,
          `Rol geri açılamadı! Rolü silenin silme limiti yükseldi!`
        )
        .setFooter(ayarlar.botadı + "! | Daima Hizmet!");
      client.channels.get(log).send(embed);
    }
  }
});
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
client.on("roleUpdate", async (oldRole, newRole) => {
  let kontrol3 = (await db.fetch(`ayarlar.${newRole.guild.id}.dil`)) || "en_US";
  if (kontrol3 !== "tr_TR") return;
  let kontrol = await db.fetch(`ayarlar.${newRole.guild.id}.aktify`);
  if (!kontrol || kontrol == undefined) return;
  if (oldRole.permissions == newRole.permissions) return;
  if (oldRole.hasPermission("ADMINISTRATOR")) return;
  if (!oldRole.hasPermission("ADMINISTRATOR"))
    if (!newRole.hasPermission("ADMINISTRATOR")) return;
  const entry = await oldRole.guild
    .fetchAuditLogs({ type: "ROLE_UPDATE" })
    .then(audit => audit.entries.first());
  if (entry.executor.id == oldRole.guild.owner.id) return;
  if (entry.executor.id == client.user.id) return;
  newRole.setPermissions(oldRole.permissions);

  let log = await db.fetch(`ayarlar.${oldRole.guild.id}.rolklog`);
  if (!log) return;
  const embed = new Discord.RichEmbed()
    .setTitle(`${ayarlar.botadı}! | Yönetici Verme Engeli`)
    .setColor("#7289DA")
    .addField(
      `Yönetici Veren;`,
      entry.executor.tag + ` (` + entry.executor.id + `)`
    )
    .addField(`Yönetici Verilen Rol;`, newRole.name + ` (` + newRole.id + `)`)
  .addField("Sonuç;", "Engellendi!")
    .setFooter(ayarlar.botadı + "! | Daima Hizmet!")
    .setTimestamp();
  client.channels.get(log).send(embed);
});
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
client.on("roleCreate", async role => {
  let kontrol = (await db.fetch(`ayarlar.${role.guild.id}.dil`)) || "en_US";
  if (kontrol !== "tr_TR") return;
  const log = await db.fetch(`ayarlar.${role.guild.id}.rolklog`);
  let limit = await db.fetch(`ayarlar.${role.guild.id}.rolklim`);
  let istisna = await db.fetch(`ayarlar.${role.guild.id}.rolkistisna`);
  let aktif = (await db.fetch(`ayarlar.${role.guild.id}.aktif`)) || "Kapalı";
  if (aktif == "Kapalı") return;
  const entry = await role.guild
    .fetchAuditLogs({ type: "ROLE_CREATE" })
    .then(audit => audit.entries.first());
  if (entry.executor.id == client.user.id) return;
  if (entry.executor.id == role.guild.owner.id) return;
  let yetkilimi;
  if (!istisna) yetkilimi = "Hayır";
  else {
    istisna.forEach(x => {
      if (role.guild.members.get(entry.executor.id).roles.has(x))
        return (yetkilimi = "Evet");
    });
  }
  if (yetkilimi != "Evet") {
    role.delete(`${ayarlar.botadı} | Rol Koruması`);
    if (!log) return;
    const embed = new Discord.RichEmbed()
      .setTitle(`${ayarlar.botadı} | Rolkoruma Sistemi`)
      .setColor("#7289DA")
      .addField(`Açan`, entry.executor.tag + `(` + entry.executor.id + `)`)
      .addField(`Açılan Rol`, role.name + `(` + role.id + `)`)
      .addField(`Sonuç`, `Rol silindi!`)
      .setFooter(ayarlar.botadı + "! | Daima Hizmet!");
    client.channels.get(log).send(embed);
  } else {
    if (!limit) {
      role.delete(`${ayarlar.botadı} | Rol Koruması`);
      if (!log) return;
      const embed = new Discord.RichEmbed()
        .setTitle(`${ayarlar.botadı} | Rolkoruma Sistemi`)
        .setColor("#7289DA")
        .addField(`Açan`, entry.executor.tag + `(` + entry.executor.id + `)`)
        .addField(`Açılan Rol`, role.name + `(` + role.id + `)`)
        .addField(`Sonuç`, `Rol silindi!`)
        .setFooter(ayarlar.botadı + "! | Daima Hizmet!");
      client.channels.get(log).send(embed);
      return;
    }
    let userlimit =
      (await db.fetch(`ayarlar.${entry.executor.id}.rolkuserlima`)) | 0;
    let u2 = userlimit + 1;
    if (u2 >= limit) {
      role.guild.roles.forEach(x => {
        if (role.guild.members.get(entry.executor.id).roles.has(x.id))
          return role.guild.members.get(entry.executor.id).removeRole(x.id);
        else return;
      });
      db.delete(`ayarlar.${entry.executor.id}.rolkuserlima`);
      role.guild.owner.send(
        `<@!${entry.executor.id}>, ${role.guild.name} adlı sunucuda rol açma limitini aştığı için tüm rolleri alındı! (Eğer alınmadıysa düzgün çalışmam için bot rolünü en üste taşıyın ve yönetici yetkisi verin.)`
      );
      if (!log) return;
      const embed = new Discord.RichEmbed()
        .setTitle(`${ayarlar.botadı} | Rolkoruma Sistemi`)
        .setColor("#7289DA")
        .addField(`Açan`, entry.executor.tag + `(` + entry.executor.id + `)`)
        .addField(`Açılan Rol`, role.name + `(` + role.id + `)`)
        .addField(`Limit`, limit + `/` + limit)
        .addField(`Sonuç`, `Rol silindi! Rolü açanın tüm rolleri alındı!`)
        .setFooter(ayarlar.botadı + "! | Daima Hizmet!");
      client.channels.get(log).send(embed);
    } else {
      db.add(`ayarlar.${entry.executor.id}.rolkuserlima`, 1);
      if (!log) return;
      const embed = new Discord.RichEmbed()
        .setTitle(`${ayarlar.botadı} | Rolkoruma Sistemi`)
        .setColor("#7289DA")
        .addField(`Silen`, entry.executor.tag + `(` + entry.executor.id + `)`)
        .addField(`Silinen Rol`, role.name + `(` + role.id + `)`)
        .addField(`Limit`, u2 + `/` + limit)
        .addField(`Sonuç`, `Rol silinemedi! Rolü açanın limiti yükseldi!`)
        .setFooter(ayarlar.botadı + "! | Daima Hizmet!");
      client.channels.get(log).send(embed);
    }
  }
});
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

client.on("roleDelete", async role => {
  let kontrol = (await db.fetch(`ayarlar.${role.guild.id}.dil`)) || "en_US";
  if (kontrol !== "en_US") return;
  const log = await db.fetch(`ayarlar.${role.guild.id}.rolklog`);
  let limit = await db.fetch(`ayarlar.${role.guild.id}.rolklim`);
  let istisna = await db.fetch(`ayarlar.${role.guild.id}.rolkistisna`);
  let aktif = (await db.fetch(`ayarlar.${role.guild.id}.aktif`)) || "Kapalı";
  if (aktif == "Kapalı") return;
  const entry = await role.guild
    .fetchAuditLogs({ type: "ROLE_DELETE" })
    .then(audit => audit.entries.first());
  if (entry.executor.id == client.user.id) return;
  if (entry.executor.id == role.guild.owner.id) return;
  let yetkilimi;
  if (!istisna) yetkilimi = "Hayır";
  else {
    istisna.forEach(x => {
      if (role.guild.members.get(entry.executor.id).roles.has(x))
        return (yetkilimi = "Evet");
    });
  }
  if (yetkilimi != "Evet") {
    role.guild
      .createRole({
        name: role.name,
        color: role.color,
        hoist: role.hoist,
        permissions: role.permissions,
        mentionable: role.mentionable,
        position: role.position
      })
      .then(r => r.setPosition(role.position));
    if (!log) return;
    const embed = new Discord.RichEmbed()
      .setTitle(`${ayarlar.botadı}! | Role-Protection System`)
      .setColor("#7289DA")
      .addField(`Remover`, entry.executor.tag + `(` + entry.executor.id + `)`)
      .addField(`Removing`, role.name + `(` + role.id + `)`)
      .addField(`Result`, `The role is opening back!`)
      .setFooter(ayarlar.botadı + "! | Always Service!");
    client.channels.get(log).send(embed);
  } else {
    if (!limit) {
      role.guild
        .createRole({
          name: role.name,
          color: role.color,
          hoist: role.hoist,
          permissions: role.permissions,
          mentionable: role.mentionable,
          position: role.position
        })
        .then(r => r.setPosition(role.position));
      if (!log) return;
      const embed = new Discord.RichEmbed()
        .setTitle(`${ayarlar.botadı}! | Role-Protection System`)
        .setColor("#7289DA")
        .addField(`Remover`, entry.executor.tag + `(` + entry.executor.id + `)`)
        .addField(`Removing`, role.name + `(` + role.id + `)`)
        .addField(`Result`, `The role is opening back!`)
        .setFooter(ayarlar.botadı + "! | Always Service!");
      client.channels.get(log).send(embed);
      return;
    }
    let userlimit =
      (await db.fetch(`ayarlar.${entry.executor.id}.rolkuserlims`)) | 0;
    let u2 = userlimit + 1;
    if (u2 >= limit) {
      role.guild.roles.forEach(x => {
        if (role.guild.members.get(entry.executor.id).roles.has(x.id))
          return role.guild.members.get(entry.executor.id).removeRole(x.id);
        else return;
      });
      db.delete(`ayarlar.${entry.executor.id}.rolkuserlims`);
      role.guild.owner.send(
        `All roles have been received because they exceeded the role deletion limit on the server ${role.guild.name}, ${entry.executor}! (If not, move the bot role to the top so I can work properly and give it administrative authority.)`
      );
      if (!log) return;
      const embed = new Discord.RichEmbed()
        .setTitle(`${ayarlar.botadı}! | Role-Protection System`)
        .setColor("#7289DA")
        .addField(`Remover`, entry.executor.tag + `(` + entry.executor.id + `)`)
        .addField(`Removing`, role.name + `(` + role.id + `)`)
        .addField(`Limit`, limit + `/` + limit)
        .addField(
          `Result`,
          `The role is back! All the roles of the role lift were taken!`
        )
        .setFooter(ayarlar.botadı + "! | Always Service!");
      client.channels.get(log).send(embed);
    } else {
      db.add(`ayarlar.${entry.executor.id}.rolkuserlims`, 1);
      if (!log) return;
      const embed = new Discord.RichEmbed()
        .setTitle(`${ayarlar.botadı}! | Role-Protection System`)
        .setColor("#7289DA")
        .addField(`Remover`, entry.executor.tag + `(` + entry.executor.id + `)`)
        .addField(`Removing`, role.name + `(` + role.id + `)`)
        .addField(`Limit`, u2 + `/` + limit)
        .addField(
          `Result`,
          `The role could not be turned back! The erasure limit of the lever has increased!`
        )
        .setFooter(ayarlar.botadı + "! | Always Service!");
      client.channels.get(log).send(embed);
    }
  }
});
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
client.on("roleUpdate", async (oldRole, newRole) => {
  let kontrol3 = (await db.fetch(`ayarlar.${newRole.guild.id}.dil`)) || "en_US";
  if (kontrol3 !== "en_US") return;
  let kontrol = await db.fetch(`ayarlar.${newRole.guild.id}.aktify`);
  if (!kontrol || kontrol == undefined) return;
  if (oldRole.permissions == newRole.permissions) return;
  if (oldRole.hasPermission("ADMINISTRATOR")) return;
  if (!oldRole.hasPermission("ADMINISTRATOR"))
    if (!newRole.hasPermission("ADMINISTRATOR")) return;
  const entry = await oldRole.guild
    .fetchAuditLogs({ type: "ROLE_UPDATE" })
    .then(audit => audit.entries.first());
  if (entry.executor.id == oldRole.guild.owner.id) return;
  if (entry.executor.id == client.user.id) return;
  newRole.setPermissions(oldRole.permissions);

  let log = await db.fetch(`ayarlar.${oldRole.guild.id}.rolklog`);
  if (!log) return;
  const embed = new Discord.RichEmbed()
    .setTitle(`${ayarlar.botadı}! | Administrator Protection`)
    .setColor("#7289DA")
    .addField(`Giver;`, entry.executor.tag + ` (` + entry.executor.id + `)`)
    .addField(`Role;`, newRole.name + ` (` + newRole.id + `)`)
    .addField("Result;", "Blocked!")
    .setFooter(ayarlar.botadı + "! | Always Service!")
    .setTimestamp();
  client.channels.get(log).send(embed);
});
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
client.on("roleCreate", async role => {
  let kontrol = (await db.fetch(`ayarlar.${role.guild.id}.dil`)) || "en_US";
  if (kontrol !== "en_US") return;
  const log = await db.fetch(`ayarlar.${role.guild.id}.rolklog`);
  let limit = await db.fetch(`ayarlar.${role.guild.id}.rolklim`);
  let istisna = await db.fetch(`ayarlar.${role.guild.id}.rolkistisna`);
  let aktif = (await db.fetch(`ayarlar.${role.guild.id}.aktif`)) || "Kapalı";
  if (aktif == "Kapalı") return;
  const entry = await role.guild
    .fetchAuditLogs({ type: "ROLE_CREATE" })
    .then(audit => audit.entries.first());
  if (entry.executor.id == client.user.id) return;
  if (entry.executor.id == role.guild.owner.id) return;
  let yetkilimi;
  if (!istisna) yetkilimi = "Hayır";
  else {
    istisna.forEach(x => {
      if (role.guild.members.get(entry.executor.id).roles.has(x))
        return (yetkilimi = "Evet");
    });
  }
  if (yetkilimi != "Evet") {
    role.delete(`${ayarlar.botadı} | Role-Protection`);
    if (!log) return;
    const embed = new Discord.RichEmbed()
      .setTitle(`${ayarlar.botadı} | Role-Protection System`)
      .setColor("#7289DA")
      .addField(`Creator`, entry.executor.tag + `(` + entry.executor.id + `)`)
      .addField(`Role`, role.name + `(` + role.id + `)`)
      .addField(`Result`, `The role has been deleted!`)
      .setFooter(ayarlar.botadı + "! | Always Service!");
    client.channels.get(log).send(embed);
  } else {
    if (!limit) {
      role.delete(`${ayarlar.botadı} | Role-Protection`);
      if (!log) return;
      const embed = new Discord.RichEmbed()
        .setTitle(`${ayarlar.botadı} | Role-Protection System`)
        .setColor("#7289DA")
        .addField(`Creator`, entry.executor.tag + `(` + entry.executor.id + `)`)
        .addField(`Role`, role.name + `(` + role.id + `)`)
        .addField(`Result`, `The role has been deleted!`)
        .setFooter(ayarlar.botadı + "! | Always Service!");
      client.channels.get(log).send(embed);
      return;
    }
    let userlimit =
      (await db.fetch(`ayarlar.${entry.executor.id}.rolkuserlima`)) | 0;
    let u2 = userlimit + 1;
    if (u2 >= limit) {
      role.guild.roles.forEach(x => {
        if (role.guild.members.get(entry.executor.id).roles.has(x.id))
          return role.guild.members.get(entry.executor.id).removeRole(x.id);
        else return;
      });
      db.delete(`ayarlar.${entry.executor.id}.rolkuserlima`);
      role.guild.owner.send(
        `All roles received because <@!${entry.executor.id}> exceeded the role-opening limit on server ${role.guild.name}! (If not, move the bot role to the top so I can work properly and give it administrative authority.)`
      );
      if (!log) return;
      const embed = new Discord.RichEmbed()
        .setTitle(`${ayarlar.botadı} | Rolkoruma Sistemi`)
        .setColor("#7289DA")
        .addField(`Açan`, entry.executor.tag + `(` + entry.executor.id + `)`)
        .addField(`Açılan Rol`, role.name + `(` + role.id + `)`)
        .addField(`Limit`, limit + `/` + limit)
        .addField(`Sonuç`, `Rol silindi! Rolü açanın tüm rolleri alındı!`)
        .setFooter(ayarlar.botadı + "! | Daima Hizmet!");
      client.channels.get(log).send(embed);
    } else {
      db.add(`ayarlar.${entry.executor.id}.rolkuserlima`, 1);
      if (!log) return;
      const embed = new Discord.RichEmbed()
        .setTitle(`${ayarlar.botadı} | Rolkoruma Sistemi`)
        .setColor("#7289DA")
        .addField(`Silen`, entry.executor.tag + `(` + entry.executor.id + `)`)
        .addField(`Silinen Rol`, role.name + `(` + role.id + `)`)
        .addField(`Limit`, u2 + `/` + limit)
        .addField(`Sonuç`, `Rol silinemedi! Rolü açanın limiti yükseldi!`)
        .setFooter(ayarlar.botadı + "! | Daima Hizmet!");
      client.channels.get(log).send(embed);
    }
  }
});
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
client.on("channelDelete", async channel => {
  let kontrol = (await db.fetch(`ayarlar.${channel.guild.id}.dil`)) || "en_US";
  if (kontrol !== "tr_TR") return;
  const log = await db.fetch(`ayarlar.${channel.guild.id}.kanalklog`);
  let limit = await db.fetch(`ayarlar.${channel.guild.id}.kanalklim`);
  let istisna = await db.fetch(`ayarlar.${channel.guild.id}.kanalkistisna`);
  let aktif =
    (await db.fetch(`ayarlar.${channel.guild.id}.aktifk`)) || "Kapalı";
  if (aktif == "Kapalı") return;
  const entry = await channel.guild
    .fetchAuditLogs({ type: "CHANNEL_DELETE" })
    .then(audit => audit.entries.first());
  if (entry.executor.id == client.user.id) return;
  if (entry.executor.id == channel.guild.owner.id) return;
  let yetkilimi;
  if (!istisna) yetkilimi = "Hayır";
  else {
    istisna.forEach(x => {
      if (channel.guild.members.get(entry.executor.id).roles.has(x))
        return (yetkilimi = "Evet");
    });
  }
  if (yetkilimi != "Evet") {
    channel.guild.createChannel(channel.name, channel.type, [
      {
        id: channel.guild.id,
        position: channel.calculatedPosition
      }
    ]);
    if (!log) return;
    const embed = new Discord.RichEmbed()
      .setTitle(ayarlar.botadı+` | Kanalkoruma`)
      .setColor("#7289DA")
      .addField(`Silen`, entry.executor.tag + `(` + entry.executor.id + `)`)
      .addField(`Silinen Kanal`, channel.name + `(` + channel.id + `)`)
      .addField(`Sonuç`, `Kanal geri açıldı!`)
      .setFooter(ayarlar.botadı+"! | Daima Hizmet!");
    client.channels.get(log).send(embed);
  } else {
    if (!limit) {
      channel.guild.createChannel(channel.name, channel.type, [
        {
          id: channel.guild.id,
          position: channel.calculatedPosition
        }
      ]);
      if (!log) return;
      const embed = new Discord.RichEmbed()
        .setTitle(ayarlar.botadı+` | Kanalkoruma`)
        .setColor("#7289DA")
        .addField(`Silen`, entry.executor.tag + `(` + entry.executor.id + `)`)
        .addField(`Silinen Kanal`, channel.name + `(` + channel.id + `)`)
        .addField(`Sonuç`, `Kanal geri açıldı!`)
        .setFooter(ayarlar.botadı+"! | Daima Hizmet!");
      client.channels.get(log).send(embed);
      return;
    }
    let userlimit =
      (await db.fetch(`ayarlar.${entry.executor.id}.kanalkuserlims`)) | 0;
    let u2 = userlimit + 1;
    if (u2 >= limit) {
      channel.guild.roles.forEach(x => {
        if (channel.guild.members.get(entry.executor.id).roles.has(x.id))
          return channel.guild.members.get(entry.executor.id).removeRole(x.id);
        else return;
      });
      db.delete(`ayarlar.${entry.executor.id}.kanalkuserlims`);
      channel.guild.owner.send(
        `<@!${entry.executor.id}>, ${channel.guild.name} adlı sunucuda kanal silme limitini aştığı için tüm rolleri alındı! (Eğer alınmadıysa düzgün çalışmam için bot rolünü en üste taşıyın ve yönetici yetkisi verin.)`
      );
      if (!log) return;
      const embed = new Discord.RichEmbed()
        .setTitle(ayarlar.botadı+` | Kanalkoruma`)
        .setColor("#7289DA")
        .addField(`Silen`, entry.executor.tag + `(` + entry.executor.id + `)`)
        .addField(`Silinen Kanal`, channel.name + `(` + channel.id + `)`)
        .addField(`Limit`, limit + `/` + limit)
        .addField(
          `Sonuç`,
          `Kanal geri açıldı! Kanalı silenin tüm rolleri alındı!`
        )
        .setFooter(ayarlar.botadı+"! | Daima Hizmet!");
      client.channels.get(log).send(embed);
    } else {
      db.add(`ayarlar.${entry.executor.id}.kanalkuserlims`, 1);
      if (!log) return;
      const embed = new Discord.RichEmbed()
        .setTitle(ayarlar.botadı+` | Kanalkoruma`)
        .setColor("#7289DA")
        .addField(`Silen`, entry.executor.tag + `(` + entry.executor.id + `)`)
        .addField(`Silinen Kanal`, channel.name + `(` + channel.id + `)`)
        .addField(`Limit`, u2 + `/` + limit)
        .addField(
          `Sonuç`,
          `Kanal geri açılamadı! Kanalı silenin silme limiti yükseldi!`
        )
        .setFooter(ayarlar.botadı+"! | Daima Hizmet!");
      client.channels.get(log).send(embed);
    }
  }
});
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
client.on("channelCreate", async channel => {
  let kontrol = (await db.fetch(`ayarlar.${channel.guild.id}.dil`)) || "en_US";
  if (kontrol !== "tr_TR") return;
  const log = await db.fetch(`ayarlar.${channel.guild.id}.kanalklog`);
  let limit = await db.fetch(`ayarlar.${channel.guild.id}.kanalklim`);
  let istisna = await db.fetch(`ayarlar.${channel.guild.id}.kanalkistisna`);
  let aktif =
    (await db.fetch(`ayarlar.${channel.guild.id}.aktifk`)) || "Kapalı";
  if (aktif == "Kapalı") return;
  const entry = await channel.guild
    .fetchAuditLogs({ type: "CHANNEL_CREATE" })
    .then(audit => audit.entries.first());
  if (entry.executor.id == client.user.id) return;
  if (entry.executor.id == channel.guild.owner.id) return;
  let yetkilimi;
  if (!istisna) yetkilimi = "Hayır";
  else {
    istisna.forEach(x => {
      if (channel.guild.members.get(entry.executor.id).roles.has(x))
        return (yetkilimi = "Evet");
    });
  }
  if (yetkilimi != "Evet") {
    channel.delete(ayarlar.botadı+` | Kanal Koruması`);
    if (!log) return;
    const embed = new Discord.RichEmbed()
      .setTitle(ayarlar.botadı+` | Kanalkoruma`)
      .setColor("#7289DA")
      .addField(`Açan`, entry.executor.tag + `(` + entry.executor.id + `)`)
      .addField(`Açılan Kanal`, channel.name + `(` + channel.id + `)`)
      .addField(`Sonuç`, `Kanal silindi!`)
      .setFooter(ayarlar.botadı+"! | Daima Hizmet!");
    client.channels.get(log).send(embed);
  } else {
    if (!limit) {
      channel.delete(ayarlar.botadı+` | Kanal Koruması`);
      if (!log) return;
      const embed = new Discord.RichEmbed()
        .setTitle(ayarlar.botadı+` | Kanalkoruma`)
        .setColor("#7289DA")
        .addField(`Açan`, entry.executor.tag + `(` + entry.executor.id + `)`)
        .addField(`Açılan Kanal`, channel.name + `(` + channel.id + `)`)
        .addField(`Sonuç`, `Kanal silindi!`)
        .setFooter(ayarlar.botadı+"! | Daima Hizmet!");
      client.channels.get(log).send(embed);
      return;
    }
    let userlimit =
      (await db.fetch(`ayarlar.${entry.executor.id}.kanalkuserlima`)) | 0;
    let u2 = userlimit + 1;
    if (u2 >= limit) {
      channel.guild.roles.forEach(x => {
        if (channel.guild.members.get(entry.executor.id).roles.has(x.id))
          return channel.guild.members.get(entry.executor.id).removeRole(x.id);
        else return;
      });
      db.delete(`ayarlar.${entry.executor.id}.kanalkuserlima`);
      channel.guild.owner.send(
        `<@!${entry.executor.id}>, ${channel.guild.name} adlı sunucuda kanal açma limitini aştığı için tüm rolleri alındı! (Eğer alınmadıysa düzgün çalışmam için bot rolünü en üste taşıyın ve yönetici yetkisi verin.)`
      );
      if (!log) return;
      const embed = new Discord.RichEmbed()
        .setTitle(ayarlar.botadı+` | Kanalkoruma`)
        .setColor("#7289DA")
        .addField(`Açan`, entry.executor.tag + `(` + entry.executor.id + `)`)
        .addField(`Açılan Kanal`, channel.name + `(` + channel.id + `)`)
        .addField(`Limit`, limit + `/` + limit)
        .addField(`Sonuç`, `Kanal silindi! Kanalı açanın tüm rolleri alındı!`)
        .setFooter(ayarlar.botadı+"! | Daima Hizmet!");
      client.channels.get(log).send(embed);
    } else {
      db.add(`ayarlar.${entry.executor.id}.kanalkuserlima`, 1);
      if (!log) return;
      const embed = new Discord.RichEmbed()
        .setTitle(ayarlar.botadı+`| Kanalkoruma`)
        .setColor("#7289DA")
        .addField(`Silen`, entry.executor.tag + `(` + entry.executor.id + `)`)
        .addField(`Silinen Kanal`, channel.name + `(` + channel.id + `)`)
        .addField(`Limit`, u2 + `/` + limit)
        .addField(`Sonuç`, `Kanal silinemedi! Kanalı açanın limiti yükseldi!`)
        .setFooter(ayarlar.botadı+"! | Daima Hizmet!");
      client.channels.get(log).send(embed);
    }
  }
});
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
client.on("channelDelete", async channel => {
  let kontrol = (await db.fetch(`ayarlar.${channel.guild.id}.dil`)) || "en_US";
  if (kontrol !== "en_US") return;
  const log = await db.fetch(`ayarlar.${channel.guild.id}.kanalklog`);
  let limit = await db.fetch(`ayarlar.${channel.guild.id}.kanalklim`);
  let istisna = await db.fetch(`ayarlar.${channel.guild.id}.kanalkistisna`);
  let aktif =
    (await db.fetch(`ayarlar.${channel.guild.id}.aktifk`)) || "Kapalı";
  if (aktif == "Kapalı") return;
  const entry = await channel.guild
    .fetchAuditLogs({ type: "CHANNEL_DELETE" })
    .then(audit => audit.entries.first());
  if (entry.executor.id == client.user.id) return;
  if (entry.executor.id == channel.guild.owner.id) return;
  let yetkilimi;
  if (!istisna) yetkilimi = "Hayır";
  else {
    istisna.forEach(x => {
      if (channel.guild.members.get(entry.executor.id).roles.has(x))
        return (yetkilimi = "Evet");
    });
  }
  if (yetkilimi != "Evet") {
    channel.guild.createChannel(channel.name, channel.type, [
      {
        id: channel.guild.id,
        position: channel.calculatedPosition
      }
    ]);
    if (!log) return;
    const embed = new Discord.RichEmbed()
      .setTitle(ayarlar.botadı+` | Channel-Protection`)
      .setColor("#7289DA")
      .addField(`Remover`, entry.executor.tag + `(` + entry.executor.id + `)`)
      .addField(`Removed Channel`, channel.name + `(` + channel.id + `)`)
      .addField(`Result`, `The channel is back!`)
      .setFooter(ayarlar.botadı+"! | Always Service!");
    client.channels.get(log).send(embed);
  } else {
    if (!limit) {
      channel.guild.createChannel(channel.name, channel.type, [
        {
          id: channel.guild.id,
          position: channel.calculatedPosition
        }
      ]);
      if (!log) return;
    const embed = new Discord.RichEmbed()
      .setTitle(ayarlar.botadı+` | Channel-Protection`)
      .setColor("#7289DA")
      .addField(`Remover`, entry.executor.tag + `(` + entry.executor.id + `)`)
      .addField(`Removed Channel`, channel.name + `(` + channel.id + `)`)
      .addField(`Result`, `The channel is back!`)
      .setFooter(ayarlar.botadı+"! | Always Service!");
    client.channels.get(log).send(embed);
      return;
    }
    let userlimit =
      (await db.fetch(`ayarlar.${entry.executor.id}.kanalkuserlims`)) | 0;
    let u2 = userlimit + 1;
    if (u2 >= limit) {
      channel.guild.roles.forEach(x => {
        if (channel.guild.members.get(entry.executor.id).roles.has(x.id))
          return channel.guild.members.get(entry.executor.id).removeRole(x.id);
        else return;
      });
      db.delete(`ayarlar.${entry.executor.id}.kanalkuserlims`);
      channel.guild.owner.send(
        `<@!${entry.executor.id}> received all roles for exceeding channel deletion limit on server ${channel.guild.name}! (If not, move the bot role to the top so I can work properly and give it administrative authority.)`
      );
      if (!log) return;
      const embed = new Discord.RichEmbed()
        .setTitle(ayarlar.botadı+` | Channel-Protection`)
        .setColor("#7289DA")
        .addField(`Remover`, entry.executor.tag + `(` + entry.executor.id + `)`)
        .addField(`Removed Channel`, channel.name + `(` + channel.id + `)`)
        .addField(`Limit`, limit + `/` + limit)
        .addField(
          `Result`,
          `The channel is back! All roles of deleting the channel were taken!`
        )
        .setFooter(ayarlar.botadı+"! | Always Service!");
      client.channels.get(log).send(embed);
    } else {
      db.add(`ayarlar.${entry.executor.id}.kanalkuserlims`, 1);
      if (!log) return;
      const embed = new Discord.RichEmbed()
        .setTitle(ayarlar.botadı+` | Channel-Protection`)
        .setColor("#7289DA")
        .addField(`Remover`, entry.executor.tag + `(` + entry.executor.id + `)`)
        .addField(`Removed Channel`, channel.name + `(` + channel.id + `)`)
        .addField(`Limit`, u2 + `/` + limit)
        .addField(
          `Result`,
          `Channel failed to open! Delete channel limit increased!`
        )
        .setFooter(ayarlar.botadı+"! | Always Service!");
      client.channels.get(log).send(embed);
    }
  }
});
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
client.on("channelCreate", async channel => {
  let kontrol = (await db.fetch(`ayarlar.${channel.guild.id}.dil`)) || "en_US";
  if (kontrol !== "en_US") return;
  const log = await db.fetch(`ayarlar.${channel.guild.id}.kanalklog`);
  let limit = await db.fetch(`ayarlar.${channel.guild.id}.kanalklim`);
  let istisna = await db.fetch(`ayarlar.${channel.guild.id}.kanalkistisna`);
  let aktif =
    (await db.fetch(`ayarlar.${channel.guild.id}.aktifk`)) || "Kapalı";
  if (aktif == "Kapalı") return;
  const entry = await channel.guild
    .fetchAuditLogs({ type: "CHANNEL_CREATE" })
    .then(audit => audit.entries.first());
  if (entry.executor.id == client.user.id) return;
  if (entry.executor.id == channel.guild.owner.id) return;
  let yetkilimi;
  if (!istisna) yetkilimi = "Hayır";
  else {
    istisna.forEach(x => {
      if (channel.guild.members.get(entry.executor.id).roles.has(x))
        return (yetkilimi = "Evet");
    });
  }
  if (yetkilimi != "Evet") {
    channel.delete(ayarlar.botadı+` | Channel-Protection`);
    if (!log) return;
    const embed = new Discord.RichEmbed()
      .setTitle(ayarlar.botadı+` | Channel-Protection`)
      .setColor("#7289DA")
      .addField(`Creator`, entry.executor.tag + `(` + entry.executor.id + `)`)
      .addField(`Created Channel`, channel.name + `(` + channel.id + `)`)
      .addField(`Result`, `Channel deleted!`)
      .setFooter(ayarlar.botadı+"! | Always Service!");
    client.channels.get(log).send(embed);
  } else {
    if (!limit) {
      channel.delete(ayarlar.botadı+` | Kanal Koruması`);
      if (!log) return;
    const embed = new Discord.RichEmbed()
      .setTitle(ayarlar.botadı+` | Channel-Protection`)
      .setColor("#7289DA")
      .addField(`Creator`, entry.executor.tag + `(` + entry.executor.id + `)`)
      .addField(`Created Channel`, channel.name + `(` + channel.id + `)`)
      .addField(`Result`, `Channel deleted!`)
      .setFooter(ayarlar.botadı+"! | Always Service!");
    client.channels.get(log).send(embed);
      return;
    }
    let userlimit =
      (await db.fetch(`ayarlar.${entry.executor.id}.kanalkuserlima`)) | 0;
    let u2 = userlimit + 1;
    if (u2 >= limit) {
      channel.guild.roles.forEach(x => {
        if (channel.guild.members.get(entry.executor.id).roles.has(x.id))
          return channel.guild.members.get(entry.executor.id).removeRole(x.id);
        else return;
      });
      db.delete(`ayarlar.${entry.executor.id}.kanalkuserlima`);
      channel.guild.owner.send(
        `All roles received because <@!${entry.executor.id}> exceeded channeling limit on server ${channel.guild.name}! (If not, move the bot role to the top so I can work properly and give it administrative authority.)`
      );
      if (!log) return;
      const embed = new Discord.RichEmbed()
        .setTitle(ayarlar.botadı+` | Channel-Protection`)
        .setColor("#7289DA")
        .addField(`Creator`, entry.executor.tag + `(` + entry.executor.id + `)`)
        .addField(`Created Channel`, channel.name + `(` + channel.id + `)`)
        .addField(`Limit`, limit + `/` + limit)
        .addField(`Result`, `Channel deleted! All the roles of the channel opener were taken!`)
        .setFooter(ayarlar.botadı+"! | Always Service!");
      client.channels.get(log).send(embed);
    } else {
      db.add(`ayarlar.${entry.executor.id}.kanalkuserlima`, 1);
      if (!log) return;
      const embed = new Discord.RichEmbed()
        .setTitle(ayarlar.botadı+`| Kanalkoruma`)
        .setColor("#7289DA")
        .addField(`Creator`, entry.executor.tag + `(` + entry.executor.id + `)`)
        .addField(`Created Channel`, channel.name + `(` + channel.id + `)`)
        .addField(`Limit`, u2 + `/` + limit)
        .addField(`Result`, `The channel could not be deleted! The limit of the channel opener has risen!`)
        .setFooter(ayarlar.botadı+"! | Always Service!");
      client.channels.get(log).send(embed);
    }
  }
});
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
client.on("guildBanAdd", async (guild, user) => {
  let kontrol = (await db.fetch(`ayarlar.${guild.id}.dil`)) || "en_US";
  if (kontrol != "tr_TR") return;
  let kontrol2 = (await db.fetch(`ayarlar.${guild.id}.bankoruma`)) || "Kapalı";
  if (kontrol2 != "Açık") return;
  const entry = await guild
    .fetchAuditLogs({ type: "MEMBER_BAN_ADD" })
    .then(audit => audit.entries.first());

  if (entry.executor.id == guild.owner.id) return;
  if (entry.executor.id == client.user.id) return;
  db.add(`limitkul.${user.id}`, 1);
  let limit = (await db.fetch(`ayarlar.${guild.id}.banlimit`)) || 3;
  let kullimit = (await db.fetch(`limitkul.${user.id}`)) || 1;
  if (kullimit >= limit) {
    guild.members.get(entry.executor.id).roles.forEach(x => {
      if (guild.members.get(entry.executor.id).roles.has(x.id))
        guild.members.get(entry.executor.id).removeRole(x.id);
    });
    db.delete(`limitkul.${user.id}`);
    let log = await db.fetch(`ayarlar.${guild.id}.banlog`);
    if (!log) return;
    client.channels
      .get(log)
      .send(
        `${entry.executor}, 1 günde ${limit}'den fazla kişiyi yasakladığı için tüm rolleri alındı!`
      );
    return;
  }
  let log = await db.fetch(`ayarlar.${guild.id}.banlog`);
  if (!log) return;
  client.channels
    .get(log)
    .send(
      `${entry.executor}, birini banladı! limit durumu: ${kullimit}/${limit}`
    );
});
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
client.on("guildBanAdd", async (guild, user) => {
  let kontrol = (await db.fetch(`ayarlar.${guild.id}.dil`)) || "en_US";
  if (kontrol != "en_US") return;
  let kontrol2 = (await db.fetch(`ayarlar.${guild.id}.bankoruma`)) || "Kapalı";
  if (kontrol2 != "Açık") return;
  const entry = await guild
    .fetchAuditLogs({ type: "MEMBER_BAN_ADD" })
    .then(audit => audit.entries.first());

  if (entry.executor.id == guild.owner.id) return;
  if (entry.executor.id == client.user.id) return;
  db.add(`limitkul.${user.id}`, 1);
  let limit = (await db.fetch(`ayarlar.${guild.id}.banlimit`)) || 3;
  let kullimit = (await db.fetch(`limitkul.${user.id}`)) || 1;
  if (kullimit >= limit) {
    guild.members.get(entry.executor.id).roles.forEach(x => {
      if (guild.members.get(entry.executor.id).roles.has(x.id))
        guild.members.get(entry.executor.id).removeRole(x.id);
    });
    db.delete(`limitkul.${user.id}`);
    let log = await db.fetch(`ayarlar.${guild.id}.banlog`);
    if (!log) return;
    client.channels
      .get(log)
      .send(
        `All roles taken because ${entry.executor} banned more than ${limit} people in 1 day!`
      );
    return;
  }
  let log = await db.fetch(`ayarlar.${guild.id}.banlog`);
  if (!log) return;
  client.channels
    .get(log)
    .send(
      `${entry.executor} banned someone! Limit status: ${kullimit}/${limit}`
    );
});
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
client.elevation = message => {
  if (!message.guild) {
    return;
  }

  let permlvl = 0;
  if (message.member.hasPermission("KICK_MEMBERS")) permlvl = 1;
  if (message.member.hasPermission("BAN_MEMBERS")) permlvl = 2;
  if (message.member.hasPermission("ADMINISTRATOR")) permlvl = 3;
  if (message.author.id === ayarlar.sahip) permlvl = 4;
  return permlvl;
};

/*var regToken = /[\w\d]{24}\.[\w\d]{6}\.[\w\d-_]{27}/g;

client.on("warn", e => {
  console.log(chalk.bgYellow(e.replace(regToken, "that was redacted")));
});

client.on("error", e => {
  console.log(chalk.bgRed(e.replace(regToken, "that was redacted")));
});*/

client.login(ayarlar.token);
